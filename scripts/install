#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_supervisor
source ynh_redis
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

#REMOVEME? ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
#REMOVEME? ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

#REMOVEME? domain=$YNH_APP_ARG_DOMAIN
path="/"
#REMOVEME? is_public=$YNH_APP_ARG_IS_PUBLIC
#REMOVEME? language=$YNH_APP_ARG_LANGUAGE
#REMOVEME? admin=$YNH_APP_ARG_ADMIN
#REMOVEME? password=$YNH_APP_ARG_PASSWORD

#REMOVEME? app=$YNH_APP_INSTANCE_NAME

api_key=$(ynh_string_random --length=8)
session_secret=$(ynh_string_random --length=8)
website_title="YunoHost Tracim"
admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
#REMOVEME? ynh_script_progression --message="Validating installation parameters..."

#REMOVEME? install_dir=/var/www/$app
#REMOVEME? test ! -e "$install_dir" || ynh_die --message="This path already contains a folder"

# Register (book) web path
#REMOVEME? ynh_webpath_register --app=$app --domain=$domain --path=$path

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
#REMOVEME? ynh_script_progression --message="Storing installation settings..."

#REMOVEME? ynh_app_setting_set --app=$app --key=domain --value=$domain
#REMOVEME? ynh_app_setting_set --app=$app --key=path --value=$path
ynh_app_setting_set --app=$app --key=language --value=$language
#REMOVEME? ynh_app_setting_set --app=$app --key=admin --value=$admin
ynh_app_setting_set --app=$app --key=api_key --value=$api_key
ynh_app_setting_set --app=$app --key=session_secret --value=$session_secret
ynh_app_setting_set --app=$app --key=website_title --value=$website_title

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
#REMOVEME? ynh_script_progression --message="Finding an available port..."

# Find an available port
#REMOVEME? port=$(ynh_find_port --port=8095)
#REMOVEME? ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
#REMOVEME? ynh_script_progression --message="Installing dependencies..."

#REMOVEME? ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies $build_pkg_dependencies
ynh_install_nodejs --nodejs_version=$nodejs_version
#REMOVEME? ynh_install_extra_app_dependencies --repo="deb https://dl.yarnpkg.com/debian/ stable main" --package="yarn" --key="https://dl.yarnpkg.com/debian/pubkey.gpg"

#=================================================
# CREATE DEDICATED USER
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring system user..."

# Create a system user
#REMOVEME? ynh_system_user_create --username=$app --home_dir="$install_dir"

#=================================================
# CREATE A POSTGRESQL DATABASE
#=================================================
#REMOVEME? ynh_script_progression --message="Creating a PostgreSQL database..."

#REMOVEME? ynh_psql_test_if_first_run
#REMOVEME? db_name=$(ynh_sanitize_dbid --db_name=$app)
#REMOVEME? db_user=$db_name
#REMOVEME? ynh_app_setting_set --app=$app --key=db_name --value=$db_name
#REMOVEME? ynh_psql_setup_db --db_user=$db_user --db_name=$db_name
#REMOVEME? db_pwd=$(ynh_app_setting_get --app=$app --key=psqlpwd)

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

#REMOVEME? ynh_app_setting_set --app=$app --key=install_dir --value=$install_dir
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..."

#REMOVEME? data_dir=/home/yunohost.app/$app
#REMOVEME? ynh_app_setting_set --app=$app --key=data_dir --value=$data_dir

mkdir -p $data_dir
mkdir -p $data_dir/depot
mkdir -p $data_dir/radicale_storage

chmod 750 "$data_dir"
chmod -R o-rwx "$data_dir"
chown -R $app:www-data "$data_dir"

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app=$app --key=redis_db --value=$redis_db

ynh_add_config --template="../conf/development.ini.sample" --destination="$install_dir/backend/development.ini"
chmod 400 "$install_dir/backend/development.ini"
chown $app:$app "$install_dir/backend/development.ini"

ynh_add_config --template="../conf/configEnv.json.sample" --destination="$install_dir/frontend/configEnv.json"
chmod 400 "$install_dir/frontend/configEnv.json"
chown $app:$app "$install_dir/frontend/configEnv.json"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..."

cp -r $install_dir/frontend/dist/assets/branding.sample $install_dir/frontend/dist/assets/branding

pushd "$install_dir/backend"
	ynh_use_nodejs
	python3 -m venv env
	set +u;
	source env/bin/activate
	set -u;
	ynh_exec_warn_less pip install -r requirements-build.txt
	ynh_exec_warn_less pip install -r requirements.txt
	ynh_exec_warn_less pip install -r requirements-full-preview-generator.txt
	ynh_exec_warn_less pip install -r requirements-db-postgres.txt
	ynh_exec_warn_less pip install -e "."
	mkdir sessions_data sessions_lock previews
	ynh_exec_warn_less tracimcli db init
	ynh_exec_warn_less tracimcli user create -e $admin_mail -u $admin --lang $language -p $password --profile administrators
	ynh_exec_warn_less tracimcli user delete -l admin@admin.admin
	set +u;
	deactivate
	set -u;
	ynh_exec_warn_less $ynh_npm install "i18next-conv@<8" -g
	ynh_exec_warn_less ./update_i18n_json_file.sh || exit 1
popd

pushd "$install_dir"
	echo 'nodeLinker: node-modules' >> .yarnrc.yml
	ynh_exec_warn_less yarn install
	ynh_exec_warn_less ./build_full_frontend.sh
popd

#REMOVEME? ynh_exec_warn_less ynh_install_app_dependencies $pkg_dependencies
ynh_exec_warn_less ynh_package_autoremove

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..."

# Create a dedicated systemd config
ynh_add_supervisor_config --service="$app" --template="supervisord.conf"

ynh_add_config --template="../conf/web.ini" --destination="/etc/uwsgi/apps-available/$app-web.ini"
chmod 400 "/etc/uwsgi/apps-available/$app-web.ini"
chown $app:$app "/etc/uwsgi/apps-available/$app-web.ini"
ln -sf /etc/uwsgi/apps-available/$app-web.ini /etc/uwsgi/apps-enabled/$app-web.ini

ynh_add_config --template="../conf/webdav.ini" --destination="/etc/uwsgi/apps-available/$app-webdav.ini"
chmod 400 "/etc/uwsgi/apps-available/$app-webdav.ini"
chown $app:$app "/etc/uwsgi/apps-available/$app-webdav.ini"
ln -sf /etc/uwsgi/apps-available/$app-webdav.ini /etc/uwsgi/apps-enabled/$app-webdav.ini

ynh_add_config --template="../conf/caldav.ini" --destination="/etc/uwsgi/apps-available/$app-caldav.ini"
chmod 400 "/etc/uwsgi/apps-available/$app-caldav.ini"
chown $app:$app "/etc/uwsgi/apps-available/$app-caldav.ini"
ln -sf /etc/uwsgi/apps-available/$app-caldav.ini /etc/uwsgi/apps-enabled/$app-caldav.ini

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add uwsgi --log="/var/log/uwsgi/app/$app-web.log"
yunohost service add supervisor --log="/var/log/supervisor/supervisord.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name="uwsgi" --action="restart" --log_path="/var/log/uwsgi/app/$app-web.log" --line_match="spawned uWSGI"

#=================================================
# SETUP SSOWAT
#=================================================
#REMOVEME? ynh_script_progression --message="Configuring permissions..."

# Make app public if necessary
#REMOVEME? if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
#REMOVEME? 	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
#REMOVEME? ynh_script_progression --message="Reloading NGINX web server..."

#REMOVEME? ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
