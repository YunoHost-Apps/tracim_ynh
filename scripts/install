#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

api_key=$(ynh_string_random --length=8)
session_secret=$(ynh_string_random --length=8)
website_title="YunoHost Tracim"
admin_mail=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================

ynh_app_setting_set --app=$app --key=api_key --value=$api_key
ynh_app_setting_set --app=$app --key=session_secret --value=$session_secret
ynh_app_setting_set --app=$app --key=website_title --value=$website_title

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..."

ynh_install_nodejs --nodejs_version=$nodejs_version

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..."

# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$install_dir"

chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..."

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..."

redis_db=$(ynh_redis_get_free_db)
ynh_app_setting_set --app=$app --key=redis_db --value=$redis_db

ynh_add_config --template="development.ini.sample" --destination="$install_dir/backend/development.ini"
chmod 400 "$install_dir/backend/development.ini"
chown $app:$app "$install_dir/backend/development.ini"

ynh_add_config --template="configEnv.json.sample" --destination="$install_dir/frontend/configEnv.json"
chmod 400 "$install_dir/frontend/configEnv.json"
chown $app:$app "$install_dir/frontend/configEnv.json"

#=================================================
# BUILD APP
#=================================================
ynh_script_progression --message="Building app..."

cp -r $install_dir/frontend/dist/assets/branding.sample $install_dir/frontend/dist/assets/branding

pushd "$install_dir/backend"
	ynh_use_nodejs
	python3 -m venv env
	source env/bin/activate
	ynh_exec_warn_less pip install -r requirements-build.txt
	ynh_exec_warn_less pip install -r requirements.txt
	ynh_exec_warn_less pip install -r requirements-full-preview-generator.txt
	ynh_exec_warn_less pip install -r requirements-db-postgres.txt
	ynh_exec_warn_less pip install -e "."
	mkdir sessions_data sessions_lock previews
	ynh_exec_warn_less tracimcli db init
	ynh_exec_warn_less tracimcli user create -e $admin_mail -u $admin --lang $language -p $password --profile administrators
	ynh_exec_warn_less tracimcli user delete -l admin@admin.admin
	deactivate
	ynh_exec_warn_less $ynh_npm install "i18next-conv@<8" -g
	ynh_exec_warn_less ./update_i18n_json_file.sh || exit 1
popd

pushd $install_dir
    ynh_use_nodejs
    echo 'nodeLinker: node-modules' >> .yarnrc.yml
    ynh_exec_warn_less env $ynh_node_load_PATH corepack enable && COREPACK_ENABLE_DOWNLOAD_PROMPT=0 corepack prepare pnpm@latest --activate
    ynh_exec_warn_less env $ynh_node_load_PATH pnpm install --production
    ynh_exec_warn_less env $ynh_node_load_PATH ./build_full_frontend.sh
popd

chmod 750 "$install_dir"
chmod -R o-rwx "$install_dir"
chown -R $app:www-data "$install_dir"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..."

# Create a dedicated systemd config
ynh_add_supervisor_config --service="$app" --template="supervisord.conf"

ynh_add_config --template="web.ini" --destination="/etc/uwsgi/apps-available/$app-web.ini"
chmod 400 "/etc/uwsgi/apps-available/$app-web.ini"
chown $app:$app "/etc/uwsgi/apps-available/$app-web.ini"
ln -sf /etc/uwsgi/apps-available/$app-web.ini /etc/uwsgi/apps-enabled/$app-web.ini

ynh_add_config --template="webdav.ini" --destination="/etc/uwsgi/apps-available/$app-webdav.ini"
chmod 400 "/etc/uwsgi/apps-available/$app-webdav.ini"
chown $app:$app "/etc/uwsgi/apps-available/$app-webdav.ini"
ln -sf /etc/uwsgi/apps-available/$app-webdav.ini /etc/uwsgi/apps-enabled/$app-webdav.ini

ynh_add_config --template="caldav.ini" --destination="/etc/uwsgi/apps-available/$app-caldav.ini"
chmod 400 "/etc/uwsgi/apps-available/$app-caldav.ini"
chown $app:$app "/etc/uwsgi/apps-available/$app-caldav.ini"
ln -sf /etc/uwsgi/apps-available/$app-caldav.ini /etc/uwsgi/apps-enabled/$app-caldav.ini

#=================================================
# GENERIC FINALIZATION
#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..."

yunohost service add uwsgi --log="/var/log/uwsgi/app/$app-web.log"
yunohost service add supervisor --log="/var/log/supervisor/supervisord.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..."

# Start a systemd service
ynh_systemd_action --service_name="uwsgi" --action="restart" --log_path="/var/log/uwsgi/app/$app-web.log" --line_match="spawned uWSGI"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed"
